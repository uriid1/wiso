# !/bin/bash

#//******************************//#
#//# Author: by uriid1			#//#
#//# license: GNU GPL			#//#
#//# telegram: uriid1			#//#
#//# Mail: appdurov@gmail.com	#//#
#//# Version 1.0.0 				#//#
####****************************####

# 
clear
printf "Iso Writer 1.0.0 by uriid1"
printf "\n"

write_iso() {
	sudo dd bs=4M if=${iso_list[$iso]} of=/dev/$usb_index status=progress oflag=sync
}

find_iso() {
	clear
	iso_list+=( $(find /home/$USER -name *.iso) )
	printf "Found iso: \n \n"
	
	# Если нашли хоть один образ
	if [ -n  "${iso_list[0]}" ];
	then
		printf " index \t Name" | column -t -s $'\t'
		
		select_iso=0
		for i in ${iso_list[@]}
		do
			printf "$select_iso) \t ${i##*/} \n" | column -t -s $'\t'
			select_iso=$((select_iso + 1))
		done
		printf "\n"
		read -p " Select the iso image (0-$((select_iso-1))): " iso
		
		# Всё ок, пишим iso
		write_iso
	else
		printf "\n No iso images were found in the 'home' directory \n \n"
	fi
}

# Получаем список подключённых USB
for i in /dev/disk/by-id/usb*
do
    usb_name_list+=( $(echo $i | sed '/part/d') )
done

# В случае если нашли хоть одну флешку
if [ "${usb_name_list[0]}" != "/dev/disk/by-id/usb* " ];
then
	#
	printf " index \t Mount \t Disk \t Size" | column -t -s $'\t'

	# Форматируем в вид для домохозяйки
	index=0
	for i in ${usb_name_list[@]}
	do
		# Получаем точки монтирования
		usb_mount_list+=( $(readlink -f $i) )
		# Форматируем имя флешек к приятному виду
		usb_name_list_sed+=( $(echo ${usb_name_list[$index]} | sed 's/.*usb-\(.*\)-[0-9]:.*/\1/' | cut -c 1-24) )
		# Получаем размер флешек
		usb_size_list+=( $(lsblk -o SIZE ${usb_mount_list[$index]} | sed '/SIZE/d' | head -n1) )
		
		# Печатаем инфу о флешках
		printf "   $index) \t ${usb_mount_list[$index]} \t ${usb_name_list_sed[$index]} \t ${usb_size_list[$index]} \n" | column -t -s $'\t'
		index=$((index + 1))
	done
	printf "\n"

	# Просим указать индекс записываемого устройства
	read -p "Enter the flash drive index (0-$((index-1))): " usb_index
	
	# 
	if [ -n "${usb_mount_list[$usb_index]}" ];
	then
		# Ищем iso образы
		find_iso
	else
		printf "\n You entered a nonexistent index! \n"
		sleep 2
		exec "$0" && exit 0
	fi
else
	printf "\n No USB devices were identified! \n \n"
fi
